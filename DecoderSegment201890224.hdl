/**
 * 7-segment decoder for segment 'b' (minterm implementation)
 * Student ID: 201890224
 * 
 * Inputs: A, B, C, D (4-bit binary input, D is MSB)
 * Output: b (segment control)
 * 
 * Implements the following minterms where b=1:
 * 0(0000),1(0001),2(0010),3(0011),
 * 4(0100),7(0111),8(1000),9(1001),
 * A(1010),D(1101)
 */

CHIP DecoderSegment201890224 {
    IN A, B, C, D;
    OUT b;

    PARTS:
    // Generate inverted inputs
    Not(in=A, out=nA);
    Not(in=B, out=nB);
    Not(in=C, out=nC);
    Not(in=D, out=nD);

    // Create minterms for each case where b=1
    // m0: 0000 (0)
    And(a=nA, b=nB, out=w0);
    And(a=nC, b=nD, out=w1);
    And(a=w0, b=w1, out=m0);

    // m1: 0001 (1)
    And(a=A, b=nB, out=w2);
    And(a=nC, b=nD, out=w3);
    And(a=w2, b=w3, out=m1);

    // m2: 0010 (2)
    And(a=nA, b=B, out=w4);
    And(a=nC, b=nD, out=w5);
    And(a=w4, b=w5, out=m2);

    // m3: 0011 (3)
    And(a=A, b=B, out=w6);
    And(a=nC, b=nD, out=w7);
    And(a=w6, b=w7, out=m3);

    // m4: 0100 (4)
    And(a=nA, b=nB, out=w8);
    And(a=C, b=nD, out=w9);
    And(a=w8, b=w9, out=m4);

    // m7: 0111 (7)
    And(a=A, b=B, out=w10);
    And(a=C, b=nD, out=w11);
    And(a=w10, b=w11, out=m7);

    // m8: 1000 (8)
    And(a=nA, b=nB, out=w12);
    And(a=nC, b=D, out=w13);
    And(a=w12, b=w13, out=m8);

    // m9: 1001 (9)
    And(a=A, b=nB, out=w14);
    And(a=nC, b=D, out=w15);
    And(a=w14, b=w15, out=m9);

    // m10: 1010 (A)
    And(a=nA, b=B, out=w16);
    And(a=nC, b=D, out=w17);
    And(a=w16, b=w17, out=m10);

    // m13: 1101 (D)
    And(a=A, b=nB, out=w18);
    And(a=C, b=D, out=w19);
    And(a=w18, b=w19, out=m13);

    // Combine all active minterms
    Or(a=m0, b=m1, out=or1);
    Or(a=or1, b=m2, out=or2);
    Or(a=or2, b=m3, out=or3);
    Or(a=or3, b=m4, out=or4);
    Or(a=or4, b=m7, out=or5);
    Or(a=or5, b=m8, out=or6);
    Or(a=or6, b=m9, out=or7);
    Or(a=or7, b=m10, out=or8);
    Or(a=or8, b=m13, out=b);
}