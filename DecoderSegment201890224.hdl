CHIP DecoderSegment201890224 {
    IN A, B, C, D;
    OUT b;

    PARTS:
    // and1 = !A * !C * D
    Not(in=A, out=notA);
    Not(in=C, out=notC);
    And(a=notA, b=notC, out=and1_temp);
    And(a=and1_temp, b=D, out=and1);

    // and2 = !A * B
    And(a=notA, b=B, out=and2);

    // and3 = A * !B * D
    Not(in=B, out=notB);
    And(a=A, b=notB, out=and3_temp);
    And(a=and3_temp, b=D, out=and3);

    // and4 = A * C
    And(a=A, b=C, out=and4);

    // OR gate to combine all conditions
    Or(a=and1, b=and2, out=or1);
    Or(a=or1, b=and3, out=or2);
    Or(a=or2, b=and4, out=b);
}

